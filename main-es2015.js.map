{"version":3,"file":"main-es2015.js","mappings":"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","sources":["./projects/ng-date-interval-showcase/src/app/app.component.ts","./projects/ng-date-interval-showcase/src/app/app.component.html","./projects/ng-date-interval-showcase/src/app/app.module.ts","./projects/ng-date-interval-showcase/src/environments/environment.ts","./projects/ng-date-interval-showcase/src/main.ts","./projects/ng-date-interval/src/langs/index.ts","./projects/ng-date-interval/src/lib/date-interval.pipe.ts","./projects/ng-date-interval/src/lib/ng-date-interval.module.ts","./projects/ng-date-interval/src/public-api.ts","./projects/ng-date-interval-showcase/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"sourcesContent":["import { Component } from '@angular/core';\n\nconst datesStr = `{\n  single: [null, new Date()],\n  single_forward: [new Date(), null],\n  multiple: ['2001-01-01', '2002-12-12'],\n  sameYear: ['2001-01-01', '2001-03-06'],\n  sameMonth: ['2001-01-01', '2001-01-06'],\n};`;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng-date-interval-showcase';\n\n  // Test subjects\n  dates = {\n    single: [null, new Date()],\n    single_forward: [new Date(), null],\n    multiple: ['2001-01-01', '2002-12-12'],\n    sameYear: ['2001-01-01', '2001-03-06'],\n    sameMonth: ['2001-01-01', '2001-01-06']\n  };\n\n  api = '{{ value_expression | dateInterval [ : format [ : locale ] ] ] }}';\n\n  // String demos\n  demos = {\n    dates: datesStr,\n    single: '{{dates.single | dateInterval}}',\n    multiple: '{{dates.multiple | dateInterval}}',\n    sameYear: '{{dates.sameYear | dateInterval}}',\n    sameMonth: '{{dates.sameMonth | dateInterval}}',\n    single_forward: `{{dates.single_forward | dateInterval}}`,\n    localized: {\n      fr_simple: `{{dates.multiple | dateInterval:'mediumDate':'fr-FR'}}`,\n      fr_sameMonth: `{{dates.sameMonth | dateInterval:'mediumDate':'fr-FR'}}`,\n      ru_simple: `{{dates.multiple | dateInterval:'mediumDate':'ru-RU'}}`,\n      ru_dateFormat: `{{dates.multiple | dateInterval:'dd MMMM y':'ru-RU'}}`\n    }\n  };\n}\n","<div class=\"main-wrapper\">\n  <h1><code>dateInterval</code> pipe</h1>\n  <br>\n\n  <mat-card class=\"example-card\">\n    <mat-card-title>API</mat-card-title>\n    <br>\n    <mat-card-content>\n      <pre><code [highlight]=\"api\"></code></pre>\n    </mat-card-content>\n  </mat-card>\n\n  <br>\n  <br>\n\n  <mat-card class=\"example-card\">\n    <mat-card-title>Examples</mat-card-title>\n    <br>\n    <mat-card-content>\n      Component:\n      <pre><code [highlight]=\"demos.dates\"></code></pre>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.single\"></code></pre>\n      <div>{{dates.single | dateInterval}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.single_forward\"></code></pre>\n      <div>{{dates.single_forward | dateInterval}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.multiple\"></code></pre>\n      <div>{{dates.multiple | dateInterval}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.sameYear\"></code></pre>\n      <div>{{dates.sameYear | dateInterval}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.sameMonth\"></code></pre>\n      <div>{{dates.sameMonth | dateInterval}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.localized.fr_simple\"></code></pre>\n      <div>{{dates.multiple | dateInterval:'mediumDate':'fr-FR'}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.localized.fr_sameMonth\"></code></pre>\n      <div>{{dates.sameMonth | dateInterval:'mediumDate':'fr-FR'}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.localized.ru_simple\"></code></pre>\n      <div>{{dates.multiple | dateInterval:'mediumDate':'ru-RU'}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.localized.ru_dateFormat\"></code></pre>\n      <div>{{dates.multiple | dateInterval:'dd MMMM y':'ru-RU'}}</div>\n    </mat-card-content>\n  </mat-card>\n\n  <br>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgDateIntervalModule } from 'projects/ng-date-interval/src/public-api';\n\nimport { AppComponent } from './app.component';\nimport localeFr from '@angular/common/locales/fr';\nimport localeRu from '@angular/common/locales/ru';\nimport { registerLocaleData } from '@angular/common';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\n\nregisterLocaleData(localeFr, 'fr-FR');\nregisterLocaleData(localeRu, 'ru-RU');\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NoopAnimationsModule,\n    NgDateIntervalModule,\n    MatCardModule,\n    HighlightModule,\n    MatDividerModule\n  ],\n  providers: [\n    {\n      provide: HIGHLIGHT_OPTIONS,\n      useValue: {\n        coreLibraryLoader: () => import('highlight.js/lib/core'),\n        languages: {\n          typescript: () => import('highlight.js/lib/languages/typescript'),\n          xml: () => import('highlight.js/lib/languages/xml')\n        }\n      }\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import en from './en.json';\nimport fr from './fr.json';\nimport ru from './ru.json';\n\nexport default { en, fr, ru };\n","import { Pipe, PipeTransform, LOCALE_ID, Inject, Input } from '@angular/core';\nimport { DatesArray, DateOutlook } from '../types/types';\nimport { formatDate } from '@angular/common';\nimport sentences from '../langs';\n\nconst defaultDateFormat = 'mediumDate';\n\n@Pipe({\n  name: 'dateInterval'\n})\nexport class DateIntervalPipe implements PipeTransform {\n  // These are set lower down\n  private format: Readonly<string>;\n  private normalizedInput: DatesArray;\n\n  constructor(@Inject(LOCALE_ID) private locale: string) {}\n\n  transform(input: DatesArray, format: string = defaultDateFormat, locale: string = this.locale): string {\n    if (!input) {\n      return '';\n    }\n\n    // Set class properties\n    this.format = format;\n    this.locale = locale;\n\n    // Make sure the input isn't longer than 2 elements\n    this.normalizedInput = input.slice(0, 2);\n\n    const [startDate, endDate] = this.normalizedInput.map(this.formatDates.bind(this));\n\n    // If the specified format omits the days, but the interval is within\n    // the same month and year, return the formatted end date only\n    if (this.isSameYear && this.isSameMonth && !this.showDay) {\n      return endDate;\n    }\n\n    if (!startDate && !endDate) {\n      return '';\n    }\n\n    return this.interpolate(this.sentence, { startDate, endDate });\n  }\n\n  private formatDates(item: Date | string, index: number): string {\n    if (!item) {\n      return null;\n    }\n\n    if (this.isSameYear && index === 0) {\n      let format = this.format === 'mediumDate' ? 'MMM d, y' : this.format;\n\n      format = this.removeDateFragment(format, 'y');\n\n      if (this.isSameMonth) {\n        format = this.removeDateFragment(format, 'm');\n      }\n\n      return formatDate(item, format, this.locale);\n    }\n\n    return formatDate(item, this.format, this.locale);\n  }\n\n  private interpolate(str: string, args: { [key: string]: string }): string {\n    for (const arg of Object.keys(args)) {\n      const regEx = new RegExp(`\\{${arg}\\}`, 'g');\n      str = str.replace(regEx, args[arg]);\n    }\n\n    return str;\n  }\n\n  private removeDateFragment(str: string, key: 'd' | 'm' | 'y'): string {\n    const keyRegExp = new RegExp(`${key}`, 'gi');\n\n    return (str = str\n      .replace(keyRegExp, '')\n      .trim()\n      .replace(/^,+/, '')\n      .replace(/,+$/, ''));\n  }\n\n  // GETTERS\n\n  private get isSameYear(): boolean {\n    const date1 = this.normalizedInput[0];\n    const date2 = this.normalizedInput[1];\n\n    if (!date1 || !date2) {\n      return false;\n    }\n\n    const year1 = new Date(date1).getFullYear();\n    const year2 = new Date(date2).getFullYear();\n\n    return year1 === year2;\n  }\n\n  private get isSameMonth(): boolean {\n    const date1 = this.normalizedInput[0];\n    const date2 = this.normalizedInput[1];\n\n    const month1 = new Date(date1).getMonth();\n    const month2 = new Date(date2).getMonth();\n\n    return month1 === month2;\n  }\n\n  private get showDay(): boolean {\n    return this.format.toLowerCase().indexOf('d') > -1;\n  }\n\n  private get sentence(): string {\n    let type: DateOutlook = 'default';\n\n    if (!this.normalizedInput[0]) {\n      type = 'backward';\n    }\n    if (!this.normalizedInput[1]) {\n      type = 'forward';\n    }\n\n    return sentences[this.locale.substring(0, 2)][type]; // ex: sentences.en.default\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DateIntervalPipe } from './date-interval.pipe';\n\n@NgModule({\n  declarations: [DateIntervalPipe],\n  exports: [DateIntervalPipe]\n})\nexport class NgDateIntervalModule {}\n","/*\n * Public API Surface of ng-date-interval\n */\n\nexport * from './lib/ng-date-interval.module';\nexport * from './lib/date-interval.pipe';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 1410;\nmodule.exports = webpackEmptyAsyncContext;"],"names":[],"sourceRoot":"webpack:///"}