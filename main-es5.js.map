{"version":3,"sources":["webpack:///ng-date-interval/src/langs/index.ts","webpack:///ng-date-interval/src/lib/date-interval.pipe.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["en","fr","ru","defautDateFormat","DateIntervalPipe","locale","input","format","normalizedInput","slice","map","formatDates","bind","startDate","endDate","isSameYear","isSameMonth","showDay","interpolate","sentence","item","index","removeDateFragment","str","args","Object","keys","arg","regEx","RegExp","replace","key","keyRegExp","trim","date1","date2","year1","Date","getFullYear","year2","month1","getMonth","month2","toLowerCase","indexOf","type","substring","name","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","module","exports","id","datesStr","AppComponent","title","dates","single","single_forward","multiple","sameYear","sameMonth","api","demos","localized","fr_simple","fr_sameMonth","ru_simple","ru_dateFormat","selector","templateUrl","styleUrls","AppModule","provide","useValue","languages","typescript","xml","declarations","imports","providers","bootstrap","environment","production","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["import en from './en.json';\nimport fr from './fr.json';\nimport ru from './ru.json';\n\nexport default { en, fr, ru };\n","import { Pipe, PipeTransform, LOCALE_ID, Inject, Input } from '@angular/core';\nimport { DatesArray, DateOutlook } from '../types/types';\nimport { formatDate } from '@angular/common';\nimport sentences from '../langs';\n\nconst defautDateFormat = 'mediumDate';\n\n@Pipe({\n  name: 'dateInterval'\n})\nexport class DateIntervalPipe implements PipeTransform {\n  // These are set lower down\n  private format: Readonly<string>;\n  private normalizedInput: DatesArray;\n\n  constructor(@Inject(LOCALE_ID) private locale: string) {}\n\n  transform(input: DatesArray, format: string = defautDateFormat, locale: string = this.locale): string {\n    if (!input) {\n      return '';\n    }\n\n    // Set class properties\n    this.format = format;\n    this.locale = locale;\n\n    // Make sure the input isn't longer than 2 elements\n    this.normalizedInput = input.slice(0, 2);\n\n    const [startDate, endDate] = this.normalizedInput.map(this.formatDates.bind(this));\n\n    // If the specified format omits the days, but the interval is within\n    // the same month and year, return the formatted end date only\n    if (this.isSameYear && this.isSameMonth && !this.showDay) {\n      return endDate;\n    }\n\n    if (!startDate && !endDate) {\n      return '';\n    }\n\n    return this.interpolate(this.sentence, { startDate, endDate });\n  }\n\n  private formatDates(item: Date | string, index: number): string {\n    if (!item) {\n      return null;\n    }\n\n    if (this.isSameYear && index === 0) {\n      let format = this.format === 'mediumDate' ? 'MMM d, y' : this.format;\n\n      format = this.removeDateFragment(format, 'y');\n\n      if (this.isSameMonth) {\n        format = this.removeDateFragment(format, 'm');\n      }\n\n      return formatDate(item, format, this.locale);\n    }\n\n    return formatDate(item, this.format, this.locale);\n  }\n\n  private interpolate(str: string, args: { [key: string]: string }): string {\n    for (const arg of Object.keys(args)) {\n      const regEx = new RegExp(`\\{${arg}\\}`, 'g');\n      str = str.replace(regEx, args[arg]);\n    }\n\n    return str;\n  }\n\n  private removeDateFragment(str: string, key: 'd' | 'm' | 'y'): string {\n    const keyRegExp = new RegExp(`${key}`, 'gi');\n\n    return (str = str\n      .replace(keyRegExp, '')\n      .trim()\n      .replace(/^,+/, '')\n      .replace(/,+$/, ''));\n  }\n\n  // GETTERS\n\n  private get isSameYear(): boolean {\n    const date1 = this.normalizedInput[0];\n    const date2 = this.normalizedInput[1];\n\n    if (!date1 || !date2) {\n      return false;\n    }\n\n    const year1 = new Date(date1).getFullYear();\n    const year2 = new Date(date2).getFullYear();\n\n    return year1 === year2;\n  }\n\n  private get isSameMonth(): boolean {\n    const date1 = this.normalizedInput[0];\n    const date2 = this.normalizedInput[1];\n\n    const month1 = new Date(date1).getMonth();\n    const month2 = new Date(date2).getMonth();\n\n    return month1 === month2;\n  }\n\n  private get showDay(): boolean {\n    return this.format.toLowerCase().indexOf('d') > -1;\n  }\n\n  private get sentence(): string {\n    let type: DateOutlook = 'default';\n\n    if (!this.normalizedInput[0]) {\n      type = 'backward';\n    }\n    if (!this.normalizedInput[1]) {\n      type = 'forward';\n    }\n\n    return sentences[this.locale.substring(0, 2)][type]; // ex: sentences.en.default\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\nconst datesStr = `{\n  single: [null, new Date()],\n  single_forward: [new Date(), null],\n  multiple: ['2001-01-01', '2002-12-12'],\n  sameYear: ['2001-01-01', '2001-03-06'],\n  sameMonth: ['2001-01-01', '2001-01-06'],\n};`;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng-date-interval-showcase';\n\n  // Test subjects\n  dates = {\n    single: [null, new Date()],\n    single_forward: [new Date(), null],\n    multiple: ['2001-01-01', '2002-12-12'],\n    sameYear: ['2001-01-01', '2001-03-06'],\n    sameMonth: ['2001-01-01', '2001-01-06']\n  };\n\n  api = '{{ value_expression | dateInterval [ : format [ : locale ] ] ] }}';\n\n  // String demos\n  demos = {\n    dates: datesStr,\n    single: '{{dates.single | dateInterval}}',\n    multiple: '{{dates.multiple | dateInterval}}',\n    sameYear: '{{dates.sameYear | dateInterval}}',\n    sameMonth: '{{dates.sameMonth | dateInterval}}',\n    single_forward: `{{dates.single_forward | dateInterval}}`,\n    localized: {\n      fr_simple: `{{dates.multiple | dateInterval:'mediumDate':'fr-FR'}}`,\n      fr_sameMonth: `{{dates.sameMonth | dateInterval:'mediumDate':'fr-FR'}}`,\n      ru_simple: `{{dates.multiple | dateInterval:'mediumDate':'ru-RU'}}`,\n      ru_dateFormat: `{{dates.multiple | dateInterval:'dd MMMM y':'ru-RU'}}`\n    }\n  };\n}\n","<div class=\"main-wrapper\">\n  <h1><code>dateInterval</code> pipe</h1>\n  <br>\n\n  <mat-card class=\"example-card\">\n    <mat-card-title>API</mat-card-title>\n    <br>\n    <mat-card-content>\n      <pre><code [highlight]=\"api\"></code></pre>\n    </mat-card-content>\n  </mat-card>\n\n  <br>\n  <br>\n\n  <mat-card class=\"example-card\">\n    <mat-card-title>Examples</mat-card-title>\n    <br>\n    <mat-card-content>\n      Component:\n      <pre><code [highlight]=\"demos.dates\"></code></pre>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.single\"></code></pre>\n      <div>{{dates.single | dateInterval}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.single_forward\"></code></pre>\n      <div>{{dates.single_forward | dateInterval}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.multiple\"></code></pre>\n      <div>{{dates.multiple | dateInterval}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.sameYear\"></code></pre>\n      <div>{{dates.sameYear | dateInterval}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.sameMonth\"></code></pre>\n      <div>{{dates.sameMonth | dateInterval}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.localized.fr_simple\"></code></pre>\n      <div>{{dates.multiple | dateInterval:'mediumDate':'fr-FR'}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.localized.fr_sameMonth\"></code></pre>\n      <div>{{dates.sameMonth | dateInterval:'mediumDate':'fr-FR'}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.localized.ru_simple\"></code></pre>\n      <div>{{dates.multiple | dateInterval:'mediumDate':'ru-RU'}}</div>\n\n      <br>\n      <mat-divider></mat-divider>\n\n      <br>\n      <pre><code [highlight]=\"demos.localized.ru_dateFormat\"></code></pre>\n      <div>{{dates.multiple | dateInterval:'dd MMMM y':'ru-RU'}}</div>\n    </mat-card-content>\n  </mat-card>\n\n  <br>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { DateIntervalPipe } from '../../../ng-date-interval/src/lib/date-interval.pipe';\n\nimport { AppComponent } from './app.component';\nimport localeFr from '@angular/common/locales/fr';\nimport localeRu from '@angular/common/locales/ru';\nimport { registerLocaleData } from '@angular/common';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\n\nregisterLocaleData(localeFr, 'fr-FR');\nregisterLocaleData(localeRu, 'ru-RU');\n\n@NgModule({\n  declarations: [AppComponent, DateIntervalPipe],\n  imports: [BrowserModule, NoopAnimationsModule, MatCardModule, HighlightModule, MatDividerModule],\n  providers: [\n    {\n      provide: HIGHLIGHT_OPTIONS,\n      useValue: {\n        languages: {\n          typescript: () => import('highlight.js/lib/languages/typescript'),\n          xml: () => import('highlight.js/lib/languages/xml')\n        }\n      }\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}